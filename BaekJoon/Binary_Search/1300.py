# 이 문제는 1붜터 N까지 중복을 허락하여 두 수를 뽑고 그 곱중에 k번째로 작은 수를 출력하는 문제.
# 문제풀이 : 중간에 있는 숫자보다 작은 수가 몇개있는지 확인하고
#만약 작은 수의 개수가 k보다 작으면 시작지점을 중간의 다음부터, k보다 크면 끝부분을 중간으로 놓는다.
# + NxN행렬인데 이때 i열의 값들은 i의 배수만으로 이루어져있기 떄문에, i열에서 k보다 작은 값의 개수는 k/i다.

N = int(input())
k = int(input())

start = 1
end = k

# start가 end를 넘지 않는 동안 반복.
while start <= end :
    mid = (start + end) // 2
    s = 0 # mid보다 작은 숫자들의 총 개수.
    for i in range(1, N + 1):
        s += min(N, mid // i) # (mid // i) -> i열에서 mid보다 작은 숫자들의 개수.
    if s >= k: # 총 합이 k보다 크거나 같으면 딱 mid에 걸린다는 뜻이므로, 일단 ans에 저장한다.
        end = mid - 1
        ans = mid
    else:
        start = mid + 1
print(ans)
# 예시.
# 1 2 3
# 2 4 6
# 3 6 9 
# mid = 6이라 가정.
# 그럼 1열에서 6보다 작거나 같은 수의 개수는 min(3, 6 // i) = 3이다.
# 2열에서도 같은 방식이면 3개.
# 3열은 2개. 그래서 3 + 3 + 2 > 7(예제입력.) 이므로 ans에 6이 저장된다.
# 만약 ans에 변동이 없으면 그대로 6출력.